package educate;

import java.util.Arrays;

public class Problems {

// Finding given String is palindrome or not

	public boolean isPalindrome(String s) {

		int i = 0;
		int j = s.length() - 1;
		while (i < j) {
			if (s.charAt(i++) != s.charAt(j--))
				return false;

		}
		return true;
	}

//sum of 2 values  of array
	public int[] indexOfSumOfTwoValues(int[] arr, int sum) {
		int output[] = new int[2];
		int i = 0;
		int j = arr.length - 1;

		while (i < j) {

			if (arr[i] + arr[j] < sum) {
				i++;
			}

			else if (arr[i] + arr[j] > sum) {
				j--;
			}

			else if (arr[i] + arr[j] == sum) {
				output[0] = arr[i];
				output[1] = arr[j];
				return output;

			}

		}

		return new int[0];

	}

//Wright program ti validate the sum of 3 elemenst is eqal to given number

	public boolean isSumOfThreeNumbersEquals(int arr[], int sum) {

		for (int i = 0; i <= arr.length - 3; i++) {

			int reqSum = sum - arr[i];
			int left = i + 1;
			int right = arr.length - 1;

			while (left < right) {
				if (arr[left] + arr[right] < reqSum) {
					left++;
				} else if (arr[left] + arr[right] > reqSum) {
					right--;
				}
				if (arr[left] + arr[right] == reqSum) {
					return true;
				}
			}

		}

		return false;
	}

//input {1,0,1,0,1,0,1,0,1,0};; output must be {0,0,0,0,0,1,1,1,1,1}
	public int[] arrangeZeroAndOne(int arr[]) {

		int low = 0;
		int high = arr.length - 1;
		while (low < high) {
			while (low < high && arr[low] == 0) {
				low++;
			}
			while (low < high && arr[high] == 1) {
				high--;
			}

			if (low < high) {
				int temp = arr[low];
				arr[low] = arr[high];
				arr[high] = temp;
				low++;
				high--;
			}

		}
		return arr;
	}

//There is n arry containn{ 0, 1, 2, 0, 2, 1}; 0,1 and 2 multiple times rndomly We need to made it as all 0,then all1, andt] then all 2;
	public int[] sortAllColours(int arr[]) {

		int low = 0;
		int mid = 0;
		int high = arr.length - 1;

		while (mid <= high) {
			switch (arr[mid]) {

			case 0:
				int temp = arr[low];
				arr[low] = arr[mid];
				arr[mid] = temp;
				low++;
				mid++;
				break;

			case 1:
				mid++;
				break;

			case 2:
				int temp1 = arr[high];
				arr[high] = arr[mid];
				arr[mid] = temp1;
				high--;
				break;

			}

		}

		return arr;
	}
//reverse word from String "I am Vikram"
	public StringBuilder reverseString(String s)
	{
		StringBuilder sb=new StringBuilder();
		String[] arr=s.split("\\s");
		int left=0;
		int right=arr.length-1;
		
		while(left<right) {
			
			String temp=arr[left];
			arr[right]=arr[left];
			arr[left]=temp;
			
		}
		for(String p:arr)
		{
			sb.append(p);
		}
		
		
		
		return sb;
	}
	public static void main(String[] args) {
		Problems c = new Problems();
		System.out.println(c.isPalindrome("ABBA"));
		int arr[] = { 1, 3, 5, 7, 9, 11 };
		int[] arr1 = { 0, 1, 2, 0, 2, 1 };
		int[] arr2 = { 1, 0, 1, 0, 1, 0, 1, 0, 1, 0 };
		String s="I am Vikram";

		System.out.println(Arrays.toString(c.arrangeZeroAndOne(arr2)));
		System.out.println(Arrays.toString(c.indexOfSumOfTwoValues(arr, 8)));
		System.out.println(c.isSumOfThreeNumbersEquals(arr, 17));
		System.out.println(Arrays.toString(c.sortAllColours(arr1)));
		System.out.println(Arrays.toString(c.reverseString(s)));

	}

}
