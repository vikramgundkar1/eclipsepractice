package sample;

import java.util.concurrent.atomic.AtomicInteger;

public class AtomicExample {
    private AtomicInteger counter = new AtomicInteger(0);

    public static void main(String[] args) {
        AtomicExample example = new AtomicExample();
        example.runTest();
    }

    public void runTest() {
        Thread thread1 = new Thread(new CounterIncrementer());
        Thread thread2 = new Thread(new CounterIncrementer());

        thread1.start();
        thread2.start();

        try {
            thread1.join();
            thread2.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Final counter value: " + counter.get());
    }

    private class CounterIncrementer implements Runnable {
        @Override
        public void run() {
            for (int i = 0; i < 1000; i++) {
                counter.incrementAndGet();
            }
        }
    }
}
